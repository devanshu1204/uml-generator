@startuml
title {{ system.name }} - Component Diagram
{% if system.description %}

note "{{ system.description }}" as N1
{% endif %}

{# Define components #}
{% for component in components -%}
{% if component.type == "package" -%}
package "{{ component.name }}" as {{ component.id }} {
}
{% elif component.type == "subsystem" -%}
component [{{ component.name }}] as {{ component.id }} << subsystem >>
{% else -%}
component [{{ component.name }}] as {{ component.id }}{% if component.stereotype %} << {{ component.stereotype }} >>{% endif %}

{% endif -%}
{% endfor %}

{# Define provided and required interfaces #}
{% for component in components -%}
{% for interface in component.providedInterfaces or component.provided_interfaces or [] -%}
interface "{{ interface }}" as {{ component.id }}_{{ interface }}
{{ component.id }} -( {{ component.id }}_{{ interface }}
{% endfor -%}
{% for interface in component.requiredInterfaces or component.required_interfaces or [] -%}
interface "{{ interface }}" as {{ component.id }}_req_{{ interface }}
{{ component.id }} ..> {{ component.id }}_req_{{ interface }}
{% endfor -%}
{% endfor %}

{# Define actors that interact with components #}
{% for actor in actors -%}
actor "{{ actor.name }}" as {{ actor.id }}
{% endfor %}

{# Build a set of component IDs for filtering #}
{% set component_ids = [] -%}
{% for component in components -%}
{% set _ = component_ids.append(component.id) -%}
{% endfor -%}

{# Define relationships ONLY between components (filter out entity relationships) #}
{% for rel in relationships -%}
{% if rel.source in component_ids and rel.target in component_ids -%}
{% if rel.type == "dependency" -%}
{{ rel.source }} ..> {{ rel.target }}{% if rel.label %}: {{ rel.label }}{% endif %}

{% elif rel.type == "realization" -%}
{{ rel.source }} ..|> {{ rel.target }}{% if rel.label %}: {{ rel.label }}{% endif %}

{% endif -%}
{% endif -%}
{% endfor -%}

@enduml
